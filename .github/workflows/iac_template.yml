name: Deploy OpenAI Tools Application

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'create'
        type: 'choice'
        options:
          - create
          - destroy

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Create resources
        if: ${{ github.event.inputs.action == 'create' }}
        run: |
          # Step 1: Create ECR repository if it doesn't exist
          ECR_REPO_NAME=openai-tools
          ECR_REPO_URI=$(aws ecr describe-repositories --repository-names $ECR_REPO_NAME --query 'repositories[0].repositoryUri' --output text 2>/dev/null || echo "")
          
          if [ -z "$ECR_REPO_URI" ]; then
            echo "Creating ECR repository $ECR_REPO_NAME"
            aws ecr create-repository --repository-name $ECR_REPO_NAME
            ECR_REPO_URI=$(aws ecr describe-repositories --repository-names $ECR_REPO_NAME --query 'repositories[0].repositoryUri' --output text)
          else
            echo "ECR repository $ECR_REPO_NAME already exists"
          fi
          
          # Step 2: Login to ECR
          aws ecr get-login-password | docker login --username AWS --password-stdin $ECR_REPO_URI
          
          # Step 3: Build and push Docker image
          docker build -t $ECR_REPO_URI:latest .
          docker push $ECR_REPO_URI:latest
          
          # Step 4: Deploy CloudFormation stack with references to the ECR image
          aws cloudformation deploy \
            --template-file cf_template/all_resources.yml \
            --stack-name OpenAIToolsStack \
            --parameter-overrides \
              CognitoDomainPrefix=openaitools-${{ github.run_id }} \
              OpenAIApiKey=${{ secrets.OPENAI_API_KEY }} \
              ACMCertificateArn=${{ vars.ACMCertificateArn }} \
              ECRRepositoryName=$ECR_REPO_NAME \
              ECRImageTag=latest \
            --capabilities CAPABILITY_IAM
            
          echo "Deployment completed successfully!"

      - name: Destroy resources
        if: ${{ github.event.inputs.action == 'destroy' }}
        run: |
          # Get ECR repository name before deleting stack
          ECR_REPO_NAME=openai-tools
          
          # Delete CloudFormation stack
          aws cloudformation delete-stack --stack-name OpenAIToolsStack
          
          # Wait for stack deletion to complete
          aws cloudformation wait stack-delete-complete --stack-name OpenAIToolsStack
          
          # After stack is deleted, delete the ECR repository
          aws ecr delete-repository --repository-name $ECR_REPO_NAME --force || true
          
          echo "All resources have been successfully destroyed!"